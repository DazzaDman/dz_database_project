-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-09-14 00:06:13 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

--student id: 33220085
--student name: Daniel Zalewski

--student id: 34210571
--student name: Aria Rana Mora

--student id: 33048150
--student name: Zejiahe Li

-- Capture run of script in file called custorders_schema_output.txt

set echo on
SPOOL pf_schema_output.txt


DROP TABLE animal_type CASCADE CONSTRAINTS;

DROP TABLE clinic CASCADE CONSTRAINTS;

DROP TABLE drug CASCADE CONSTRAINTS;

DROP TABLE invoice CASCADE CONSTRAINTS;

DROP TABLE owner CASCADE CONSTRAINTS;

DROP TABLE pet CASCADE CONSTRAINTS;

DROP TABLE prescription CASCADE CONSTRAINTS;

DROP TABLE prsc_drug CASCADE CONSTRAINTS;

DROP TABLE service CASCADE CONSTRAINTS;

DROP TABLE spec CASCADE CONSTRAINTS;

DROP TABLE training CASCADE CONSTRAINTS;

DROP TABLE training_status CASCADE CONSTRAINTS;

DROP TABLE trn_instr CASCADE CONSTRAINTS;

DROP TABLE trninstr_spec CASCADE CONSTRAINTS;

DROP TABLE vet CASCADE CONSTRAINTS;

DROP TABLE visit CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE animal_type (
    animal_typeid   NUMBER NOT NULL,
    animal_typename VARCHAR2(50 CHAR) NOT NULL
);

COMMENT ON COLUMN animal_type.animal_typeid IS
    'animal type id';

COMMENT ON COLUMN animal_type.animal_typename IS
    'animal type name';

ALTER TABLE animal_type ADD CONSTRAINT animal_type_pk PRIMARY KEY ( animal_typeid );

ALTER TABLE animal_type ADD CONSTRAINT animal_type_nk UNIQUE ( animal_typeid );

CREATE TABLE clinic (
    clinic_id      NUMBER(10) NOT NULL,
    clinic_name    VARCHAR2(50) NOT NULL,
    clinic_address VARCHAR2(50) NOT NULL,
    clinic_phone   NUMBER(10) NOT NULL
);

COMMENT ON COLUMN clinic.clinic_id IS
    'clinic id';

COMMENT ON COLUMN clinic.clinic_name IS
    'clinic name';

COMMENT ON COLUMN clinic.clinic_address IS
    'clinic address';

ALTER TABLE clinic ADD CONSTRAINT clinic_pk PRIMARY KEY ( clinic_id );

CREATE TABLE drug (
    drug_id            NUMBER NOT NULL,
    drug_name          VARCHAR2(50 CHAR) NOT NULL,
    drug_instruction   VARCHAR2(50 CHAR) NOT NULL,
    drug_linecost      NUMBER NOT NULL,
    pet_id             NUMBER NOT NULL,
    visit_dateandtime  DATE NOT NULL,
    invoice_invoice_id NUMBER NOT NULL
);

COMMENT ON COLUMN drug.drug_id IS
    'drug id';

COMMENT ON COLUMN drug.drug_name IS
    'name of drug';

COMMENT ON COLUMN drug.drug_instruction IS
    'instruction of a drug';

COMMENT ON COLUMN drug.drug_linecost IS
    'drug line cost';

COMMENT ON COLUMN drug.pet_id IS
    'pet id';

COMMENT ON COLUMN drug.visit_dateandtime IS
    'visit date and time';

ALTER TABLE drug ADD CONSTRAINT drug_pk PRIMARY KEY ( drug_id );

CREATE TABLE invoice (
    total_cost        NUMBER NOT NULL,
    pay_method        VARCHAR2(10 CHAR) NOT NULL,
    pet_id            NUMBER NOT NULL,
    visit_dateandtime DATE NOT NULL,
    invoice_id        NUMBER NOT NULL
);

ALTER TABLE invoice
    ADD CONSTRAINT chk_paymethod CHECK ( pay_method IN ( 'C', 'E' ) );

COMMENT ON COLUMN invoice.total_cost IS
    'total cost';

COMMENT ON COLUMN invoice.pay_method IS
    'pay method';

COMMENT ON COLUMN invoice.pet_id IS
    'pet id';

COMMENT ON COLUMN invoice.visit_dateandtime IS
    'visit date and time';

CREATE UNIQUE INDEX invoice__idx ON
    invoice (
        pet_id
    ASC,
        visit_dateandtime
    ASC );

ALTER TABLE invoice ADD CONSTRAINT invoice_pk PRIMARY KEY ( invoice_id );

CREATE TABLE owner (
    owner_id    NUMBER NOT NULL,
    owner_gname VARCHAR2(50 CHAR) NOT NULL,
    owner_fname VARCHAR2(50 CHAR) NOT NULL,
    owner_phone NUMBER NOT NULL
);

COMMENT ON COLUMN owner.owner_id IS
    'owner id';

COMMENT ON COLUMN owner.owner_gname IS
    'owner''s given name';

COMMENT ON COLUMN owner.owner_fname IS
    'owner''s family name';

COMMENT ON COLUMN owner.owner_phone IS
    'owner''s phone number';

ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

CREATE TABLE pet (
    pet_id        NUMBER NOT NULL,
    pet_name      VARCHAR2(50 CHAR) NOT NULL,
    pet_dob       DATE NOT NULL,
    pet_type      VARCHAR2(10 CHAR) NOT NULL,
    owner_id      NUMBER NOT NULL,
    pet_status    VARCHAR2(50 CHAR) NOT NULL,
    animal_typeid NUMBER NOT NULL
);

ALTER TABLE pet
    ADD CONSTRAINT chk_petstatus CHECK ( pet_status IN ( 'A', 'D' ) );

COMMENT ON COLUMN pet.pet_id IS
    'pet id';

COMMENT ON COLUMN pet.pet_name IS
    'animal name';

COMMENT ON COLUMN pet.pet_dob IS
    'animal date of birth';

COMMENT ON COLUMN pet.pet_type IS
    'animal type';

COMMENT ON COLUMN pet.owner_id IS
    'owner id';

COMMENT ON COLUMN pet.pet_status IS
    'pet status (whether it''s dead or alive)';

COMMENT ON COLUMN pet.animal_typeid IS
    'animal type id';

ALTER TABLE pet ADD CONSTRAINT pet_pk PRIMARY KEY ( pet_id );

CREATE TABLE prescription (
    prsc_dose         VARCHAR2(50 CHAR) NOT NULL,
    prsc_freq         VARCHAR2(50 CHAR) NOT NULL,
    pet_id            NUMBER NOT NULL,
    visit_dateandtime DATE NOT NULL
);

COMMENT ON COLUMN prescription.prsc_dose IS
    'advice dose of drug';

COMMENT ON COLUMN prescription.prsc_freq IS
    'advice frequency of drug';

COMMENT ON COLUMN prescription.pet_id IS
    'pet id';

COMMENT ON COLUMN prescription.visit_dateandtime IS
    'visit date and time';

ALTER TABLE prescription ADD CONSTRAINT prescription_pk PRIMARY KEY ( pet_id,
                                                                      visit_dateandtime
                                                                      );

CREATE TABLE prsc_drug (
    drug_drug_id                   NUMBER NOT NULL,
    prescription_pet_id            NUMBER NOT NULL,
    prescription_visit_dateandtime DATE NOT NULL
);

ALTER TABLE prsc_drug
    ADD CONSTRAINT prsc_drug_pk PRIMARY KEY ( drug_drug_id,
                                              prescription_pet_id,
                                              prescription_visit_dateandtime );

CREATE TABLE service (
    service_code        VARCHAR2(50 CHAR) NOT NULL,
    service_description VARCHAR2(50 CHAR) NOT NULL,
    service_linecost    NUMBER NOT NULL,
    pet_id              NUMBER NOT NULL,
    visit_dateandtime   DATE NOT NULL,
    invoice_invoice_id  NUMBER NOT NULL
);

COMMENT ON COLUMN service.service_code IS
    'service code';

COMMENT ON COLUMN service.service_description IS
    'service description';

COMMENT ON COLUMN service.service_linecost IS
    'service line cost';

COMMENT ON COLUMN service.pet_id IS
    'pet id';

COMMENT ON COLUMN service.visit_dateandtime IS
    'visit date and time';

ALTER TABLE service ADD CONSTRAINT service_pk PRIMARY KEY ( service_code );

CREATE TABLE spec (
    vet_spec_id NUMBER NOT NULL,
    spec_name   VARCHAR2(50 CHAR) NOT NULL,
    vet_id      NUMBER(10) NOT NULL
);

COMMENT ON COLUMN spec.vet_spec_id IS
    'specialization id';

COMMENT ON COLUMN spec.spec_name IS
    'specialization name';

COMMENT ON COLUMN spec.vet_id IS
    'vet id';

ALTER TABLE spec ADD CONSTRAINT specialization_pk PRIMARY KEY ( vet_spec_id );

ALTER TABLE spec ADD CONSTRAINT specialization_nk UNIQUE ( vet_id );

CREATE TABLE training (
    trn_id         NUMBER(10) NOT NULL,
    trn_name       VARCHAR2(50) NOT NULL,
    trn_duration   VARCHAR2(10) NOT NULL,
    vet_id         NUMBER(10) NOT NULL,
    clinic_id      NUMBER(10) NOT NULL,
    trn_start_date DATE NOT NULL,
    trn_start_time VARCHAR2(10),
    trninstr_id    NUMBER(20) NOT NULL
);

COMMENT ON COLUMN training.trn_id IS
    'training ID (surrogate PK)';

COMMENT ON COLUMN training.trn_name IS
    'name of training';

COMMENT ON COLUMN training.trn_duration IS
    'duration of training';

COMMENT ON COLUMN training.vet_id IS
    'vet id';

COMMENT ON COLUMN training.clinic_id IS
    'clinic id';

COMMENT ON COLUMN training.trn_start_date IS
    'training starting date';

COMMENT ON COLUMN training.trn_start_time IS
    'training starting time';

COMMENT ON COLUMN training.trninstr_id IS
    'training instructor id';

ALTER TABLE training ADD CONSTRAINT training_pk PRIMARY KEY ( trn_id );

CREATE TABLE training_status (
    trnsts_complete VARCHAR2(50 CHAR) NOT NULL,
    trnsts_expry    DATE NOT NULL,
    vet_id          NUMBER(10) NOT NULL,
    trn_id          NUMBER(10) NOT NULL
);

COMMENT ON COLUMN training_status.trnsts_complete IS
    'training status completion status';

COMMENT ON COLUMN training_status.trnsts_expry IS
    'vet expiry date to course';

COMMENT ON COLUMN training_status.vet_id IS
    'vet id';

COMMENT ON COLUMN training_status.trn_id IS
    'training ID (surrogate PK)';

CREATE UNIQUE INDEX training_status__idx ON
    training_status (
        vet_id
    ASC );

CREATE TABLE trn_instr (
    vet_spec_id   NUMBER,
    trninstr_id   NUMBER(20) NOT NULL,
    trninstr_name VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN trn_instr.vet_spec_id IS
    'specialization id';

COMMENT ON COLUMN trn_instr.trninstr_id IS
    'training instructor id';

COMMENT ON COLUMN trn_instr.trninstr_name IS
    'training instructor name';

ALTER TABLE trn_instr ADD CONSTRAINT training_instructor_pk PRIMARY KEY ( trninstr_id
);

CREATE TABLE trninstr_spec (
    trn_instr_trninstr_id NUMBER(20) NOT NULL,
    spec_vet_spec_id      NUMBER NOT NULL
);

ALTER TABLE trninstr_spec ADD CONSTRAINT trninstr_spec_pk PRIMARY KEY ( trn_instr_trninstr_id
,
                                                                        spec_vet_spec_id
                                                                        );

CREATE TABLE vet (
    vet_id             NUMBER(10) NOT NULL,
    vet_given_name     VARCHAR2(50 CHAR) NOT NULL,
    vet_family_name    VARCHAR2(50 CHAR) NOT NULL,
    vet_phone          NUMBER(10) NOT NULL,
    vet_date_employed  DATE NOT NULL,
    vet_specialization VARCHAR2(30 CHAR),
    clinic_id          NUMBER(10) NOT NULL,
    vet_home_clinic_id NUMBER(20) NOT NULL
);

COMMENT ON COLUMN vet.vet_id IS
    'vet id';

COMMENT ON COLUMN vet.vet_given_name IS
    'vet given name';

COMMENT ON COLUMN vet.vet_family_name IS
    'vet family name';

COMMENT ON COLUMN vet.vet_phone IS
    'vet_phone';

COMMENT ON COLUMN vet.vet_date_employed IS
    'vet date of employment';

COMMENT ON COLUMN vet.vet_specialization IS
    'vet specialisation';

COMMENT ON COLUMN vet.clinic_id IS
    'clinic id';

COMMENT ON COLUMN vet.vet_home_clinic_id IS
    'vet home clinic id';

ALTER TABLE vet ADD CONSTRAINT vet_pk PRIMARY KEY ( vet_id );

CREATE TABLE visit (
    visit_dateandtime  DATE NOT NULL,
    visit_pet_weight   NUMBER NOT NULL,
    visit_duration     NUMBER NOT NULL,
    visit_notes        VARCHAR2(50 CHAR),
    clinic_id          NUMBER(10) NOT NULL,
    pet_id             NUMBER NOT NULL,
    vet_id             NUMBER(10) NOT NULL,
    invoice_invoice_id NUMBER NOT NULL
);

COMMENT ON COLUMN visit.visit_dateandtime IS
    'visit date and time';

COMMENT ON COLUMN visit.visit_pet_weight IS
    'visit pet weight';

COMMENT ON COLUMN visit.visit_duration IS
    'visit duration';

COMMENT ON COLUMN visit.visit_notes IS
    'visit notes';

COMMENT ON COLUMN visit.clinic_id IS
    'clinic id';

COMMENT ON COLUMN visit.pet_id IS
    'pet id';

COMMENT ON COLUMN visit.vet_id IS
    'vet id';

CREATE UNIQUE INDEX visit__idx ON
    visit (
        invoice_invoice_id
    ASC );

ALTER TABLE visit ADD CONSTRAINT visit_pk PRIMARY KEY ( pet_id,
                                                        visit_dateandtime );

ALTER TABLE training
    ADD CONSTRAINT clinic_training FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE visit
    ADD CONSTRAINT clinic_visit FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE drug
    ADD CONSTRAINT invoice_drug FOREIGN KEY ( invoice_invoice_id )
        REFERENCES invoice ( invoice_id );

ALTER TABLE service
    ADD CONSTRAINT invoice_service FOREIGN KEY ( invoice_invoice_id )
        REFERENCES invoice ( invoice_id );

ALTER TABLE pet
    ADD CONSTRAINT owner_pet FOREIGN KEY ( owner_id )
        REFERENCES owner ( owner_id );

ALTER TABLE pet
    ADD CONSTRAINT pet_animaltype FOREIGN KEY ( animal_typeid )
        REFERENCES animal_type ( animal_typeid );

ALTER TABLE visit
    ADD CONSTRAINT pet_visit FOREIGN KEY ( pet_id )
        REFERENCES pet ( pet_id );

ALTER TABLE prsc_drug
    ADD CONSTRAINT prsc_drug_drug_fk FOREIGN KEY ( drug_drug_id )
        REFERENCES drug ( drug_id );

ALTER TABLE prsc_drug
    ADD CONSTRAINT prsc_drug_prescription_fk FOREIGN KEY ( prescription_pet_id,
                                                           prescription_visit_dateandtime
                                                           )
        REFERENCES prescription ( pet_id,
                                  visit_dateandtime );

ALTER TABLE training_status
    ADD CONSTRAINT relation_12 FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE training_status
    ADD CONSTRAINT trn_trnstatus FOREIGN KEY ( trn_id )
        REFERENCES training ( trn_id );

ALTER TABLE trninstr_spec
    ADD CONSTRAINT trninstr_spec_spec_fk FOREIGN KEY ( spec_vet_spec_id )
        REFERENCES spec ( vet_spec_id );

ALTER TABLE trninstr_spec
    ADD CONSTRAINT trninstr_spec_trn_instr_fk FOREIGN KEY ( trn_instr_trninstr_id )
        REFERENCES trn_instr ( trninstr_id );

ALTER TABLE training
    ADD CONSTRAINT trninstr_trn FOREIGN KEY ( trninstr_id )
        REFERENCES trn_instr ( trninstr_id );

ALTER TABLE vet
    ADD CONSTRAINT vet_clinic FOREIGN KEY ( clinic_id )
        REFERENCES clinic ( clinic_id );

ALTER TABLE spec
    ADD CONSTRAINT vet_training FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE visit
    ADD CONSTRAINT vet_visit FOREIGN KEY ( vet_id )
        REFERENCES vet ( vet_id );

ALTER TABLE drug
    ADD CONSTRAINT visit_drug FOREIGN KEY ( pet_id,
                                            visit_dateandtime )
        REFERENCES visit ( pet_id,
                           visit_dateandtime );

ALTER TABLE invoice
    ADD CONSTRAINT visit_invoice FOREIGN KEY ( pet_id,
                                               visit_dateandtime )
        REFERENCES visit ( pet_id,
                           visit_dateandtime );

ALTER TABLE visit
    ADD CONSTRAINT visit_invoicev1 FOREIGN KEY ( invoice_invoice_id )
        REFERENCES invoice ( invoice_id );

ALTER TABLE prescription
    ADD CONSTRAINT visit_prsc FOREIGN KEY ( pet_id,
                                            visit_dateandtime )
        REFERENCES visit ( pet_id,
                           visit_dateandtime );

ALTER TABLE service
    ADD CONSTRAINT visit_service FOREIGN KEY ( pet_id,
                                               visit_dateandtime )
        REFERENCES visit ( pet_id,
                           visit_dateandtime );

CREATE SEQUENCE invoice_invoice_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER invoice_invoice_id_trg BEFORE
    INSERT ON invoice
    FOR EACH ROW
    WHEN ( new.invoice_id IS NULL )
BEGIN
    :new.invoice_id := invoice_invoice_id_seq.nextval;
END;
/

SPOOL off
set echo off


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             3
-- ALTER TABLE                             41
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           1
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
